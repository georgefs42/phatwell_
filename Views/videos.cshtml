@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage

@{
    // Define the function to extract the video ID
    string ExtractYouTubeVideoId(string url)
    {
        var videoId = string.Empty;
        
        if (!string.IsNullOrEmpty(url))
        {
            var uri = new Uri(url);
            var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
            
            // Standard YouTube URL
            if (query["v"] != null)
            {
                videoId = query["v"];
            }
            else
            {
                // Handle other YouTube formats if necessary
                var segments = uri.AbsolutePath.Split('/');
                if (segments.Length > 1 && segments[1] == "watch")
                {
                    videoId = query["v"];
                }
            }
        }
        
        return videoId;
    }

    // Get the block list (videoBlock is the alias of the block list property)
    var videoBlockList = Model.Value<IEnumerable<Umbraco.Cms.Core.Models.PublishedContent.IPublishedElement>>("videoBlock");
}

<h1>My YouTube Videos</h1>

@if (videoBlockList != null && videoBlockList.Any())
{
    @foreach (var block in videoBlockList)
    {
        var videoUrl = block.Value<string>("videoUrl"); // Assuming "videoUrl" is the alias of the URL field
        var videoId = ExtractYouTubeVideoId(videoUrl); // Call the function to get video ID

        if (!string.IsNullOrEmpty(videoId))
        {
            <div class="video-container">
                <iframe width="560" height="315" src="https://www.youtube.com/embed/@videoId" frameborder="0" allowfullscreen></iframe>
            </div>
        }
    }
}
else
{
    <p>No videos available</p>
}
